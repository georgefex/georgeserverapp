extends layout

block content
    br
    br
    h1
        | RAM
    br
    br
    .pure-u-1
        div
        canvas#canvas(height = '450', width = '600')
    script(type='text/javascript').

        function MainViewModel(data) {
            var self = this;
            var socket = io.connect('http://localhost:3001');
            self.lineChartData = ko.observable({
                labels: ["0","1","2","3","4","5","6","7","8","9","10"],
                datasets: [
                    {
                        fillColor: "rgba(232,160,125,0.9)",
                        strokeColor: "rgba(232,160,125,0)",
                        pointColor: "rgba(232,160,125,1)",
                        pointStrokeColor: "#fff",
                        data: [20, 20, 20, 20, 20, 20, 20,20,20,20,20]
                    }
                ]
            });
            socket.on('pushram', function (data,data2,data3) {
                //var memoriaTotal =  data.MemTotal /1024;
                self.lineChartData().datasets[0].data.shift();
                self.lineChartData().datasets[0].data.push(data);

                self.initLine();
                document.getElementById("p1").innerHTML = '   '+data;
                document.getElementById("p2").innerHTML = '   '+data2;
                document.getElementById("p3").innerHTML = '   '+data3;
            });
            self.initLine = function () {
                var options = {
                    animation: false,
                    scaleOverride: true,
                    scaleSteps: 10,//Number - The number of steps in a hard coded scale
                    scaleStepWidth: 10,//Number - The value jump in the hard coded scale
                    scaleStartValue: 0,//Number - The scale starting value
                    responsive:true,
                };
                var ctx = $("#canvas").get(0).getContext("2d");
                var myLine = new Chart(ctx).Line(vm.lineChartData(), options);

            }
        }
        var vm = new MainViewModel();
        vm.initLine();

    br
    br
    br
    br
    div
        h4
            | Porcentaje de RAM utilizada (%):
        h1#p1
    div
        br
        br
        h4
            | Cantidad RAM utilizada (mb):
        h1#p2
        br
        br
        h4
            | Capacidad Total (mb):
        h1#p3

